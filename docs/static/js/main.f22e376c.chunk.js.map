{"version":3,"sources":["Components/Beer.tsx","Components/Food.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Beer","useState","cerveja","SetCervejas","className","onClick","axios","get","then","resposta","data","map","item","src","image_url","alt","name","tagline","description","id","Foods","categorias","setCategorias","categoriaSelecionada","setCategoriaSelecionada","comidas","setComidas","meuInput","SeuMeuInput","useEffect","categories","meals","type","placeholder","onChange","event","target","value","strCategory","idCategory","strMealThumb","strMeal","idMeal","App","Food","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAuCeA,EAnCF,WAAO,IAAD,EAEgBC,mBAAc,IAF9B,mBAERC,EAFQ,KAECC,EAFD,KAOjB,OAEE,sBAAKC,UAAU,2BAAf,UAEE,kDAEA,wBAAQC,QAAS,WATfC,IAAMC,IAAI,gDACLC,MAAK,SAAAC,GAAQ,OAAIN,EAAYM,EAASC,UAQ7C,4BACA,qBAAKN,UAAU,cAAf,SACiB,OAAZF,GAAoBA,EAAQS,KAAI,SAACC,GAAD,OAGlC,sBAAKR,UAAU,OAAf,UACG,qBAAKS,IAAKD,EAAKE,UAAWC,IAAI,SAC9B,6BAAKH,EAAKI,OAEV,+BAAOJ,EAAKK,UACZ,gCAAQL,EAAKM,gBALWN,EAAKO,aCmC1BC,EAnDD,WAAO,IAAD,EACkBnB,mBAAc,IADhC,mBACXoB,EADW,KACCC,EADD,OAEsCrB,mBAAiB,IAFvD,mBAEXsB,EAFW,KAEWC,EAFX,OAGYvB,mBAAe,IAH3B,mBAGXwB,EAHW,KAGFC,EAHE,OAIczB,mBAAU,IAJxB,mBAIX0B,EAJW,KAIDC,EAJC,KAsBlB,OAfAC,qBAAU,WACRvB,IAAMC,IAAN,0DACGC,MAAK,SAAAC,GAAQ,OAAIa,EAAcb,EAASC,KAAKoB,iBAC/C,IAEHD,qBAAU,WACRvB,IAAMC,IAAN,+DAAkEgB,IAC/Df,MAAK,SAAAC,GAAQ,OAAIiB,EAAWjB,EAASC,KAAKqB,YAC5C,CAACR,IAEJM,qBAAU,WACRvB,IAAMC,IAAN,+DAAkEoB,IAC/DnB,MAAK,SAAAC,GAAQ,OAAIiB,EAAWjB,EAASC,KAAKqB,YAC5C,CAACJ,IAGF,sBAAKvB,UAAU,2BAAf,UACE,iDACA,2FAEE,uBAAO4B,KAAK,OAAOC,YAAY,qBAAqBC,SAAU,SAACC,GAAD,OAAWP,EAAYO,EAAMC,OAAOC,aAEpG,6BACkB,OAAfhB,GAAuBA,EAAWV,KAAI,SAACC,GAAD,OACrC,oBAAIP,QAAS,kBAAMmB,EAAwBZ,EAAK0B,cAAhD,SAAqF1B,EAAK0B,aAAvB1B,EAAK2B,iBAK5E,oDAAsB,iCAAShB,OAE/B,qBAAKnB,UAAU,iBAAf,SACa,OAAZqB,GAAoBA,EAAQd,KAAI,SAACC,GAAD,OAE/B,sBAAKR,UAAU,YAAf,UACE,qBAAKS,IAAKD,EAAK4B,eACf,4BAAuB5B,EAAK6B,SAApB7B,EAAK8B,oBCjCRC,MAVf,WACE,OACE,sBAAKvC,UAAU,MAAf,UACE,cAACwC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f22e376c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios' \r\nimport { Bebidas} from '../types/bebidas'\r\n\r\nconst Beer = () => {\r\n    \r\n    const [cerveja, SetCervejas] = useState<any>([])\r\n    function BuscaCerveja() {\r\n        axios.get('https://api.punkapi.com/v2/beers/?per_page=8')\r\n            .then(resposta => SetCervejas(resposta.data))\r\n      }\r\n  return (\r\n      \r\n    <div className=\"food-beer-list food-shop\">\r\n      \r\n      <h1>Tipos de Cerveja</h1>\r\n     \r\n      <button onClick={() => BuscaCerveja() } >Buscar Cerveja</button>\r\n      <div className=\"beers-list \" >\r\n          {cerveja !== null && cerveja.map((item: Bebidas) => (\r\n              \r\n        \r\n         <div className=\"beer\" key={item.id} >\r\n            <img src={item.image_url} alt=\"Buzz\" />\r\n            <h3>{item.name}</h3>\r\n            \r\n            <span>{item.tagline}</span>\r\n            <small>{item.description}</small>\r\n          </div>\r\n         \r\n          \r\n          ))}\r\n         </div>\r\n      </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default Beer;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\nimport { Categorias } from '../types/categorias'\r\nimport { Pratos } from '../types/pratos'\r\nimport { isTemplateLiteral } from 'typescript';\r\n\r\nconst Foods = () => {\r\n  const [categorias, setCategorias] = useState<any>([])\r\n  const [categoriaSelecionada, setCategoriaSelecionada] = useState<String>(\"\")\r\n  const [comidas, setComidas] = useState<any> ([])\r\n  const [meuInput, SeuMeuInput] = useState (\"\")\r\n\r\n  \r\n  useEffect(() => {\r\n    axios.get(`https://www.themealdb.com/api/json/v1/1/categories.php`)\r\n      .then(resposta => setCategorias(resposta.data.categories))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categoriaSelecionada}`)\r\n      .then(resposta => setComidas(resposta.data.meals))\r\n  }, [categoriaSelecionada])\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${meuInput}`)\r\n      .then(resposta => setComidas(resposta.data.meals))\r\n  }, [meuInput])\r\n\r\n  return (\r\n    <div className=\"food-beer-list food-shop\">\r\n      <h1>Tipos de pratos</h1>\r\n      <p>\r\n        Selecione uma categoria ou digite a comida (em inglÃªs):\r\n        <input type=\"text\" placeholder=\"Digite a comida...\" onChange={(event) => SeuMeuInput(event.target.value)} />\r\n      </p>\r\n      <ul>\r\n        {categorias !== null && categorias.map((item: Categorias) => (\r\n          <li onClick={() => setCategoriaSelecionada(item.strCategory)} key={item.idCategory}>{item.strCategory}</li>\r\n        )\r\n        )}</ul>\r\n\r\n      \r\n      <h2>Tipo selecionado: <strong>{categoriaSelecionada}</strong></h2>\r\n      \r\n      <div className=\"food-container\">\r\n      {comidas !== null && comidas.map((item: Pratos) => (\r\n      \r\n        <div className=\"food-item\">\r\n          <img src={item.strMealThumb}  />\r\n          <p key={item.idMeal} >{item.strMeal}</p>\r\n        </div>\r\n      ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Foods;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Beer from './Components/Beer'\r\nimport Food from './Components/Food'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Food />\r\n      <Beer />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}